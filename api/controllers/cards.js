const pool = require('../../config/db');
const { nanoid } = require('nanoid');
const user = require('./user');

module.exports = () => {
  const controller = {};

  controller.getCards = (req, res) => {
    pool.getConnection((err, connection) => {
      connection.query(`SELECT * FROM cards WHERE user_id = ?`, [
        req.userId
      ], function(error, results, fields) {
          connection.release();
          if (error) throw error;

          let data = [];
          for(i=0; i<results.length; i++) {
            data.push(results[i]);
          }

          res.status(200).json({"data": data});
        });
    });
  }

  controller.addCard = (req, res) => {
      const id = nanoid(10);
      const userId = req.userId;
      const title = req.body.title;
      const description = req.body.description;
      const createdAt = Date.now();
      const updatedAt = Date.now();

      // TODO: validação dos dados recebidos

      pool.getConnection((err, connection) => {
        connection.query(`INSERT INTO cards VALUES (?, ?, ?, ?, ?, ?)`, [
          id,
          userId,
          title,
          description,
          createdAt,
          updatedAt
        ], function(error, results) {
            connection.release();
            if (error) throw error;
          });
      });

      res.status(201).json({message: "Success"});
  }

  controller.updateCard = (req, res) => {
    const id = req.body.id;
    const userId = req.userId;
    const title = req.body.title;
    const description = req.body.description;
    const updatedAt = Date.now();

    pool.getConnection((err, connection) => {
      connection.query(`UPDATE cards
        SET title = ?, description = ?, updated_at = ? WHERE id = ? AND user_id = ?`, [
          title,
          description,
          updatedAt,
          id,
          userId
        ], function(error, results) {
          connection.release();
          if (error) throw error;

          res.status(200).json({message: "Success"});
        })
    })
  }

  controller.deleteCard = (req, res) => {
    const id = req.body.id;

    pool.getConnection((err, connection) => {
      connection.query(`DELETE FROM cards WHERE id = ?`, [
        id
      ], function(error, results) {
          connection.release();
          if (error) throw error;

          res.status(200).json({message: "Success"});
        })
    })
  }

  return controller;
}